{"version":3,"sources":["store/state.js","store/reducers.js","store/index.js","views/form/index.js","router/index.js","serviceWorker.js","main.js","router/Async.jsx"],"names":["initState","newsDetail","pageTitle","user","todos","id","parseInt","Math","random","isComplete","title","combineReducers","state","arguments","length","undefined","defaultState","action","type","Object","objectSpread","data","store","createStore","reducers","applyMiddleware","thunk","Reservation","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isGoing","numberOfGuests","handleInputChange","bind","assertThisInitialized","event","target","value","checked","name","setState","defineProperty","prevProps","prevState","react_default","a","createElement","onChange","React","Component","Home","asyncComponent","__webpack_require__","e","then","Doc","Promise","all","layout","MainRoute","react_router","exact","path","component","render","to","form","Boolean","window","location","hostname","match","ReactDOM","es","react_router_dom","getUserConfirmation","message","callback","confirm","basename","router","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_exports__","importComponent","_React$Component","AsyncComponent","_Users_wuwei_Desktop_react_cli_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_wuwei_Desktop_react_cli_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_wuwei_Desktop_react_cli_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_Users_wuwei_Desktop_react_cli_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_wuwei_Desktop_react_cli_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","_componentDidMount","_Users_wuwei_Desktop_react_cli_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_wuwei_Desktop_react_cli_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","_ref","wrap","_context","prev","next","sent","default","stop","apply","C","react__WEBPACK_IMPORTED_MODULE_7___default"],"mappings":"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","file":"static/js/main.44c08ced.chunk.js","sourcesContent":["let initState = {\n    newsDetail:{\n      pageTitle: '首页',\n      user:'admin'\n    },\n    \n    todos: [\n      {\n        id: parseInt(Math.random() * 10000000),\n        isComplete: false,\n        title: '学习redux'\n      }, {\n        id: parseInt(Math.random() * 10000000),\n        isComplete: true,\n        title: '学习react'\n      }, {\n        id: parseInt(Math.random() * 10000000),\n        isComplete: false,\n        title: '学习node'\n      }\n    ]\n  };\n\nexport default initState","// reducers.js\n\n// 工具函数，用于组织多个reducer，并返回reducer集合\nimport { combineReducers } from 'redux'\n// 默认值\nimport defaultState from './state'\n\n// 一个reducer就是一个函数\nfunction pageTitle (state = defaultState.newsDetail, action) {\n  // 不同的action有不同的处理逻辑\n  switch (action.type) {\n    case 'SET_PAGE_TITLE':\n      return {...state,pageTitle:action.data}\n    default:\n      return state\n  }\n}\n\nfunction todos (state = defaultState.todos, action) {\n  switch (action.type) {\n    case 'SET_INFO_LIST':\n      return action.data\n    default:\n      return state\n  }\n}\n\n// 导出所有reducer\nexport default combineReducers({\n    pageTitle,\n    todos\n})","import { \n  applyMiddleware, \n  createStore } from 'redux'\n\n// 中间件，作用：如果不使用该中间件，当我们dispatch一个action时，需要给dispatch函数传入action对象；但如果我们使用了这个中间件，那么就可以传入一个函数，这个函数接收两个参数:dispatch和getState。这个dispatch可以在将来的异步请求完成后使用，对于异步action很有用\nimport thunk from 'redux-thunk'\n\n// 引入reducer\nimport reducers from './reducers'\n\n// 创建store实例\nlet store = createStore(\n  reducers,\n  applyMiddleware(thunk)\n)\n\nexport default store","import React from 'react';\n\nexport default class Reservation extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isGoing: true,\n        numberOfGuests: 2\n      };\n      this.handleInputChange = this.handleInputChange.bind(this);\n    }\n  \n    handleInputChange(event) {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    }\n    shouldComponentUpdate(prevProps, prevState) {\n        if(prevState.numberOfGuests > 5){\n          // this.forceUpdate()\n            return false;\n        }\n        return true\n    }\n   render() {\n       return (\n        <form>\n          <label>\n            参与:\n            <input\n              name=\"isGoing\"\n              type=\"checkbox\"\n              checked={this.state.isGoing}\n              onChange={this.handleInputChange} />\n          </label>\n          <br />\n          <label>\n            来宾人数:\n            <input\n              name=\"numberOfGuests\"\n              type=\"number\"\n              value={this.state.numberOfGuests}\n              onChange={this.handleInputChange} />\n          </label>\n        </form>\n   );\n    }\n  }","import React from 'react';\nimport { Switch, Route,\n  Redirect \n} from 'react-router-dom'\nimport asyncComponent from \"./Async\";\nimport form from '../views/form'\nconst Home = asyncComponent(() => import('../views/home'));\nconst Doc = asyncComponent(() => import('../views/doc'));\nconst layout = asyncComponent(() => import('../views/layout'));\n// const form = asyncComponent(() => import('../views/form'));\n\n \nconst MainRoute = () => (\n  <Switch>\n    <Route exact path=\"/home\" component={Home}/>\n    <Route path='/' exact render={()=> (\n               <Redirect to=\"index\"/>\n           )}/>\n    <Route path=\"/doc/:id\" component={Doc} />\n    <Route path=\"/form\" component={form} />\n\n    <Route path='/index' component={layout} />\n    {/* // 所有错误路由跳转页面 */}\n】  <Route component={Doc} />\n  </Switch>\n)\n \nexport default MainRoute;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport MainRoute from './router';\nimport 'babel-polyfill'\nimport 'antd/dist/antd.css';\n\nimport {Provider} from 'react-redux';\nimport store from '@/store';\n\nimport * as serviceWorker from './serviceWorker';\n//路由拦截回调函数\nconst getConfirmation = (message, callback) => {\n    const allowTransition = window.confirm(message);\n    callback(allowTransition);\n  }\nReactDOM.render(<Provider store={store}><BrowserRouter  getUserConfirmation={getConfirmation} basename=\"rss/views\"  >\n    <MainRoute/>\n</BrowserRouter></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from \"react\";\n\nexport default importComponent => {\n  class AsyncComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        component: null\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n      this.setState({\n        component: component\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n      return C ? <C {...this.props} /> : null;\n    }\n  }\n\n  return AsyncComponent;\n};\n"],"sourceRoot":""}